a:16:{s:8:"provides";a:0:{}s:8:"filelist";a:24:{s:7:"LICENSE";a:1:{s:4:"role";s:3:"doc";}s:8:"Date.php";a:3:{s:4:"role";s:3:"php";s:14:"baseinstalldir";s:1:"/";s:12:"replacements";a:1:{i:0;a:3:{s:4:"from";s:17:"@package_version@";s:2:"to";s:7:"version";s:4:"type";s:12:"package-info";}}}s:13:"Date/Calc.php";a:2:{s:4:"role";s:3:"php";s:12:"replacements";a:1:{i:0;a:3:{s:4:"from";s:17:"@package_version@";s:2:"to";s:7:"version";s:4:"type";s:12:"package-info";}}}s:14:"Date/Human.php";a:2:{s:4:"role";s:3:"php";s:12:"replacements";a:1:{i:0;a:3:{s:4:"from";s:17:"@package_version@";s:2:"to";s:7:"version";s:4:"type";s:12:"package-info";}}}s:17:"Date/TimeZone.php";a:2:{s:4:"role";s:3:"php";s:12:"replacements";a:1:{i:0;a:3:{s:4:"from";s:17:"@package_version@";s:2:"to";s:7:"version";s:4:"type";s:12:"package-info";}}}s:13:"Date/Span.php";a:2:{s:4:"role";s:3:"php";s:12:"replacements";a:1:{i:0;a:3:{s:4:"from";s:17:"@package_version@";s:2:"to";s:7:"version";s:4:"type";s:12:"package-info";}}}s:14:"tests/calc.php";a:2:{s:4:"role";s:4:"test";s:12:"replacements";a:1:{i:0;a:3:{s:4:"from";s:14:"@include_path@";s:2:"to";s:7:"php_dir";s:4:"type";s:11:"pear-config";}}}s:19:"tests/test_calc.php";a:1:{s:4:"role";s:4:"test";}s:32:"tests/test_date_methods_span.php";a:1:{s:4:"role";s:4:"test";}s:23:"tests/testunit_date.php";a:1:{s:4:"role";s:4:"test";}s:28:"tests/testunit_date_span.php";a:1:{s:4:"role";s:4:"test";}s:18:"tests/testunit.php";a:1:{s:4:"role";s:4:"test";}s:16:"tests/bug674.php";a:1:{s:4:"role";s:4:"test";}s:16:"tests/bug967.php";a:1:{s:4:"role";s:4:"test";}s:18:"tests/bug727_1.php";a:1:{s:4:"role";s:4:"test";}s:18:"tests/bug727_2.php";a:1:{s:4:"role";s:4:"test";}s:18:"tests/bug727_3.php";a:1:{s:4:"role";s:4:"test";}s:18:"tests/bug727_4.php";a:1:{s:4:"role";s:4:"test";}s:18:"tests/wknotest.txt";a:1:{s:4:"role";s:4:"test";}s:31:"tests/weeksinmonth_4_monday.txt";a:1:{s:4:"role";s:4:"test";}s:31:"tests/weeksinmonth_4_sunday.txt";a:1:{s:4:"role";s:4:"test";}s:33:"tests/weeksinmonth_rdm_monday.txt";a:1:{s:4:"role";s:4:"test";}s:33:"tests/weeksinmonth_rdm_sunday.txt";a:1:{s:4:"role";s:4:"test";}s:4:"TODO";a:1:{s:4:"role";s:3:"doc";}}s:10:"xsdversion";s:3:"1.0";s:15:"packagerversion";s:5:"1.4.1";s:7:"package";s:4:"Date";s:7:"summary";s:26:"Date and Time Zone Classes";s:11:"description";s:475:"Generic classes for representation and manipulation of
dates, times and time zones without the need of timestamps,
which is a huge limitation for php programs.  Includes time zone data,
time zone conversions and many date/time conversions.
It does not rely on 32-bit system date stamps, so
you can display calendars and compare dates that date
pre 1970 and post 2038. This package also provides a class
to convert date strings between Gregorian and Human calendar formats.
 
";s:11:"maintainers";a:4:{i:0;a:4:{s:6:"handle";s:4:"baba";s:4:"name";s:12:"Baba Buehler";s:5:"email";s:14:"baba@babaz.com";s:4:"role";s:4:"lead";}i:1;a:4:{s:6:"handle";s:5:"mohrt";s:4:"name";s:10:"Monte Ohrt";s:5:"email";s:13:"mohrt@php.net";s:4:"role";s:4:"lead";}i:2;a:4:{s:6:"handle";s:6:"pajoye";s:4:"name";s:17:"Pierre-Alain Joye";s:5:"email";s:17:"pajoye@pearfr.org";s:4:"role";s:4:"lead";}i:3;a:4:{s:6:"handle";s:6:"alan_k";s:4:"name";s:12:"Alan Knowles";s:5:"email";s:17:"alan@akbkhome.com";s:4:"role";s:9:"developer";}}s:7:"version";s:5:"1.4.6";s:12:"release_date";s:10:"2005-11-15";s:15:"release_license";s:11:"PHP License";s:13:"release_state";s:6:"stable";s:13:"release_notes";s:96:"- Change license from PHP License to new BSD License
- Bug #5715 fypo, missing s in $GLOBALS
  
";s:12:"release_deps";a:1:{i:1;a:3:{s:4:"type";s:3:"php";s:3:"rel";s:2:"ge";s:7:"version";s:3:"4.2";}}s:9:"changelog";a:6:{i:0;a:4:{s:7:"version";s:5:"1.4.5";s:12:"release_date";s:10:"2005-10-12";s:13:"release_state";s:6:"stable";s:13:"release_notes";s:66:"Same code base as 1.4.4-beta
See 1.4.4 changelog for details
    
";}i:1;a:4:{s:7:"version";s:5:"1.4.4";s:12:"release_date";s:10:"2005-02-10";s:13:"release_state";s:5:"alpha";s:13:"release_notes";s:868:"- Establish the DATE_CALC_FORMAT constant
  and use it as the default value for each
  of the Date_Calc class' method's $format
  parameter.
- Add beginOfMonthBySpan() and
  endOfMonthBySpan() methods to Date_Calc.
- Use integers for the parameters in
  Date_Calc instead of strings.
- Tweak Date_Calc::NWeekdayOfMonth() so it
  can calculate the 'last' given weekday of
  a month.
- #1640. Make sure all longname's are also
  keys in $GLOBALS['_DATE_TIMEZONE_DATA'].  Makes
  Date_TimeZone work under more operating systems.
- #5420, missing CEST
- #3846, getYear, getMonth returns integer
- #2652, add %h and %i support (rob at wildlime dot com
- #5494, force dot as decimal separator
- #3022, allow to specify the weekday abbrevation length used in ::format()
- #4878, %s padding fix when < 10 ( aashley at optimiser dot com)
- #3059, use GLOBALS in date_span
    
";}i:2;a:4:{s:7:"version";s:5:"1.4.3";s:12:"release_date";s:10:"2004-05-16";s:13:"release_state";s:6:"stable";s:13:"release_notes";s:192:"- Fix #1250, wrong name for Bangladesh TZ
- Fix #1390, add XML Schema datetime support
  (aashley at optimiser dot com)
  See http://www.w3.org/TR/2004/PER-xmlschema-2-20040318/#dateTime
    
";}i:3;a:4:{s:7:"version";s:5:"1.4.2";s:12:"release_date";s:10:"2004-03-14";s:13:"release_state";s:6:"stable";s:13:"release_notes";s:193:"- Fix #976 TimeZone default bad global usage
  only _DATE_TIMEZONE_DEFAULT is used now
- Fix #683, add optional length argumet to getDayName()
- Fix PHP5 problems with get_class functions
    
";}i:4;a:3:{s:7:"version";s:5:"1.4.1";s:13:"release_state";s:6:"stable";s:13:"release_notes";s:163:"- Fix #674 endOfWeek() beginOfWeek()
- Fix #727, weeksInMonth (wrong result with some dates)
- Fix #674 (and old system #22549), check arguments in Date_Span
    
";}i:5;a:4:{s:7:"version";s:3:"1.4";s:12:"release_date";s:10:"2003-12-21";s:13:"release_state";s:6:"stable";s:13:"release_notes";s:1044:"- improvements in input date parsing
- add Date methods addSpan() and subtractSpan()
- added two more ISO8601 date/time output formats DATE_FORMAT_ISO_BASIC and DATE_FORMAT_ISO_EXTENDED
- improve Date_Calc isLeapYear() and daysInMonth() for year 1582
- add gregorianToISO() method to Date_Calc
- add dateSeason() method to Date_Calc
- add Date_Span class
- bugfix in Date_Calc when century ends in 00, only define DATE_CALC_BEGIN_WEEKDAY if not already defined
- bugfix in beginOfNextWeek(), beginOfPreviousWeek() (thx to andreas dot kossmeier at bergfex dot at)
- bugfix in nextDayOfWeek and prevDayOfWeek (thx to koan at gmx dot at)
- bugfix for bug 62: getDate(DATE_FORMAT_UNIXTIME) off because of DST
- bugfix for bug 65: format(e) returns zero-padded day
- bugfix for bug 195: Suppress a notice in setDate()
- bugfix for bug 271: Date_Calc weeksInMonth() returns wrong number
- fix abstraction bug, Date constructor accepts now object that extends Date
- add tests to release package
- Fix notices and mins calc in to toUTCbyOffset()
    
";}}s:13:"_lastmodified";i:1145963369;}